var h = 0, m = 0, l = 0;
var htime, mtime, ltime;

function createHighBandwidthChunk() {
	x = 205;
	y = 80;
	htime = setInterval(function() {
		var svg = document.getElementsByTagName('svg')[0]; //Get svg element
		var newElement = document.createElementNS("http://www.w3.org/2000/svg", 'rect');
		newElement.setAttribute("x", x); 
		newElement.setAttribute("y", y); 
		newElement.setAttribute("width",8); 
		newElement.setAttribute("height",18); 
		newElement.setAttribute("class","stroke-medium stream-high "); 
		newElement.setAttribute("id",  "h" + h);
		newElement.setAttribute("stroke","none");
		svg.appendChild(newElement);
		console.log('loaded');
		h ++;
		if(x >= 95 && x <= 125) {
				y = y + 7.5;
			} else if(x >= 179 && x <= 229) {
				y = y + 7.5;
			} else if (x >= 390 && x <= 400) {
			y = y;
		}
		console.log(x);
		x = x + 10;
		newElement.setAttribute("x", 205 + x);
		newElement.setAttribute("y", y);
	}, 500);
	var x = 5;
	clearInterval(mtime);
	clearInterval(ltime);

	
}

function createMediumBandwidthChunk(client) {
	x = 205;
	y = 82.5;
	mtime = setInterval(function() {
		var svg = document.getElementsByTagName('svg')[0]; //Get svg element
		var newElement = document.createElementNS("http://www.w3.org/2000/svg", 'rect');
		newElement.setAttribute("x",205); 
		newElement.setAttribute("y",y); 
		newElement.setAttribute("width",8); 
		newElement.setAttribute("height",13); 
		newElement.setAttribute("class","stroke-medium stream-medium "); 
		newElement.setAttribute("id", "m" + m);
		newElement.setAttribute("stroke","none");

		svg.appendChild(newElement);
		console.log('loaded');

		m ++; 
		if(client == "DASH-Client 1") {
			if(x >= 95 && x <= 125) {
				y = y + 7.5;
			} else if(x >= 179 && x <= 245) {
				y = y + 8;
			} else if (x >= 390 && x < 410) {
				y = y- 5;
			}
		} else {
			if(x >= 95 && x <= 125) {
				y = y + 7.5;
			} else if(x >= 179 && x <= 229) {
				y = y + 8;
			} else if (x >= 390 && x <= 400) {
				y = y + 15;
			}
		}
		
		console.log(x);
		x = x + 10;
		newElement.setAttribute("x", 205 + x);
		newElement.setAttribute("y", y);
	}, 500);
	var x = 5;
	clearInterval(htime);
	clearInterval(ltime);
}

function createLowBandwidthChunk(client) {
	x = 205;
	y = 85;
	ltime = setInterval(function() {
		var svg = document.getElementsByTagName('svg')[0]; //Get svg element
		var newElement = document.createElementNS("http://www.w3.org/2000/svg", 'rect');
		newElement.setAttribute("x",205); 
		newElement.setAttribute("y",y); 
		newElement.setAttribute("width",10); 
		newElement.setAttribute("height",10); 
		newElement.setAttribute("class","stroke-medium stream-low "); 
		newElement.setAttribute("id", "l" + l);
		newElement.setAttribute("stroke","none");

		svg.appendChild(newElement);
		console.log('loaded');

		l ++;
		if(client == "DASH-Client 1") {
			if(x >= 95 && x <= 140) {
				y = y + 7.5;
			} else if(x >= 179 && x <= 245) {
				y = y + 8;
			} else if (x >= 390 && x < 410) {
				y = y- 5;
			}
		} else {
			if(x >= 95 && x <= 140) {
				y = y + 7.5;
			} else if(x >= 179 && x <= 245) {
				y = y + 8;
			} else if (x >= 390 && x < 410) {
				y = y + 30;
			}
		}
		console.log(x);
		x = x + 15;
		newElement.setAttribute("x", 205 + x);
		newElement.setAttribute("y", y);
	}, 1000);
	var x = 5;
	clearInterval(htime);
	clearInterval(mtime);
}

function checkBandwidth() {
	var client = document.getElementById("clients").value;
	var bandwidth = document.getElementById("bandwidth").value;
	if(client != "Select Client") {
		if(client == "DASH-Client 1") {
			if(bandwidth == "1" || bandwidth =="2") {
				transmitMediumBandwidth(client);
			} else if (bandwidth == "3") {
				transmitLowBandwidth(client);
			}
		} else if(client == "DASH-Client 2") {
			if(bandwidth == "1") {
				transmitHighBandwidth();
			} else if (bandwidth =="2") {
				transmitMediumBandwidth(client);
			}
			else if (bandwidth == "3") {
				transmitLowBandwidth(client);
			}
		}
		document.getElementById("msg").innerHTML = "ok";
	}
	else {
		document.getElementById("msg").innerHTML = "Please select DASH-Client";
	}
}

function transmitHighBandwidth() {
	createHighBandwidthChunk();
	console.log('H');
}

function transmitMediumBandwidth(client) {
	createMediumBandwidthChunk(client);
	console.log('M');
}

function transmitLowBandwidth(client) {
	createLowBandwidthChunk(client);
	console.log('L');
}
